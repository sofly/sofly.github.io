var e0=Object.defineProperty,x0=Object.defineProperties;var t0=Object.getOwnPropertyDescriptors;var G=Object.getOwnPropertySymbols;var L0=Object.prototype.hasOwnProperty,U0=Object.prototype.propertyIsEnumerable;var K=(e,x,t)=>x in e?e0(e,x,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[x]=t,N=(e,x)=>{for(var t in x||(x={}))L0.call(x,t)&&K(e,t,x[t]);if(G)for(var t of G(x))U0.call(x,t)&&K(e,t,x[t]);return e},T=(e,x)=>x0(e,t0(x));import{r as k,j as z,c as X,R as a0,a as d0}from"./vendor.bb80ee0e.js";const r0=function(){const x=document.createElement("link").relList;if(x&&x.supports&&x.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))U(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const L of o.addedNodes)L.tagName==="LINK"&&L.rel==="modulepreload"&&U(L)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function U(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}};r0();var Y;(function(e){e.Idle="idle",e.Failed="failed",e.Fetched="fetched",e.Fetching="fetching",e.Refetching="refetching"})(Y||(Y={}));const i0=e=>typeof(e==null?void 0:e.error)=="string"?e.error:typeof(e==null?void 0:e.message)=="string"?e.message:String(e),D=e=>{const x=k.exports.useRef();return x.current||(x.current=e()),x.current};var M;(function(e){e.Idle="idle",e.Initializing="initializing",e.Ready="ready",e.Failed="failed",e.AccessDenied="access-denied",e.OverconstrainedError="overconstrained-error"})(M||(M={}));class c0 extends Error{constructor(x){super(x);this.name="OverconstrainedError"}}const o0=({videoRef:e,streamWidth:x,streamHeight:t,streamAspectRatio:U,capabilities:r})=>{const[o,L]=k.exports.useState({state:M.Idle,error:null,stream:null,errorMessage:null}),c=k.exports.useRef(o);c.current=o;const a=D(()=>({createStream:async()=>{var d,n,h,f;try{L(u=>T(N({},u),{state:M.Initializing}));const p=await window.navigator.mediaDevices.getUserMedia({video:{facingMode:"user",width:{ideal:x},height:{ideal:t},aspectRatio:{ideal:U}},audio:!1});if(c.current.stream=p,r&&!{}.VITE_IS_LOCAL_BUILD){const l=p.getVideoTracks()[0].getCapabilities();if(((n=(d=l==null?void 0:l.width)==null?void 0:d.max)!=null?n:0)<r.width||((f=(h=l==null?void 0:l.height)==null?void 0:h.max)!=null?f:0)<r.height)throw new c0("Camera capabilities is not supported")}e.current.srcObject=p,L(u=>T(N({},u),{stream:p,state:M.Ready}))}catch(p){let u=M.Failed;(p==null?void 0:p.name)==="NotAllowedError"&&(u=M.AccessDenied),(p==null?void 0:p.name)==="OverconstrainedError"&&(u=M.OverconstrainedError),L(l=>T(N({},l),{error:p,state:u,errorMessage:i0(p)}))}},stopStream:()=>{var d;(d=c.current.stream)==null||d.getTracks().forEach(n=>n.stop())}})),s=D(()=>({isStateIdle:()=>c.current.state===M.Idle,isStateReady:()=>c.current.state===M.Ready,isStateFailed:()=>c.current.state===M.Failed,isStateInitializing:()=>c.current.state===M.Initializing,isStateAccessDenied:()=>c.current.state===M.AccessDenied,isStateOverconstrainedError:()=>c.current.state===M.OverconstrainedError}));return k.exports.useEffect(()=>a.stopStream,[]),[o,a,s]},J={isPlaying:!1,isLoadedMetaData:!1},s0=()=>{const[e,x]=k.exports.useState(J),t=D(()=>({videoPlaying:()=>{x(U=>T(N({},U),{isPlaying:!0}))},videoLoadedMetadata:()=>{x(U=>T(N({},U),{isLoadedMetaData:!0}))},resetVideoState:()=>x(J)}));return[e,t]},Z={WIDTH:1920,HEIGHT:1440,ASPECT_RATIO:4/3},n0="_imageWrapper_1dmeb_1",f0="_canvas_1dmeb_12";var Q={imageWrapper:n0,canvas:f0};const I=z.exports.jsx,P=z.exports.jsxs,b0=z.exports.Fragment,h0=({width:e,height:x,className:t,illuminationCanvasRef:U})=>I("div",{className:X(Q.imageWrapper,t),children:I("canvas",{width:e,height:x,ref:U,className:Q.canvas})});var l0=k.exports.memo(h0);const v={};v.Image=function(e,x,t){this.width=e||0,this.height=x||0,this.data=t||[]};v.grayscale=function(e,x){for(var t=e.data,U=x.data,r=t.length,o=0,L=0;o<r;o+=4)U[L++]=t[o]*.299+t[o+1]*.587+t[o+2]*.114+.5&255;return x.width=e.width,x.height=e.height,x};v.threshold=function(e,x,t){var U=e.data,r=x.data,o=U.length,L=[],c;for(c=0;c<256;++c)L[c]=c<=t?0:255;for(c=0;c<o;++c)r[c]=L[U[c]];return x.width=e.width,x.height=e.height,x};v.adaptiveThreshold=function(e,x,t,U){var r=e.data,o=x.data,L=r.length,c=[],a;for(v.stackBoxBlur(e,x,t),a=0;a<768;++a)c[a]=a-255<=-U?255:0;for(a=0;a<L;++a)o[a]=c[r[a]-o[a]+255];return x.width=e.width,x.height=e.height,x};v.otsu=function(e){var x=e.data,t=x.length,U=[],r=0,o=0,L=0,c=0,a=0,s=0,d,n,h;for(h=0;h<256;++h)U[h]=0;for(h=0;h<t;++h)U[x[h]]++;for(h=0;h<256;++h)o+=U[h]*h;for(h=0;h<256;++h)if(c+=U[h],c!==0){if(a=t-c,a===0)break;L+=U[h]*h,d=L/c-(o-L)/a,n=c*a*d*d,n>s&&(s=n,r=h)}return r};v.stackBoxBlurMult=[1,171,205,293,57,373,79,137,241,27,391,357,41,19,283,265];v.stackBoxBlurShift=[0,9,10,11,9,12,10,11,12,9,13,13,10,9,13,13];v.BlurStack=function(){this.color=0,this.next=null};v.stackBoxBlur=function(e,x,t){var U=e.data,r=x.data,o=e.height,L=e.width,c=o-1,a=L-1,s=t+t+1,d=t+1,n=v.stackBoxBlurMult[t],h=v.stackBoxBlurShift[t],f,p,u,l,y,g,m,_,i,b;for(f=p=new v.BlurStack,b=1;b<s;++b)f=f.next=new v.BlurStack;for(f.next=p,y=0,i=0;i<o;++i){for(g=y,u=U[y],l=d*u,f=p,b=0;b<d;++b)f.color=u,f=f.next;for(b=1;b<d;++b)f.color=U[y+b],l+=f.color,f=f.next;for(f=p,_=0;_<L;++_)r[y++]=l*n>>>h,m=_+d,m=g+(m<a?m:a),l-=f.color-U[m],f.color=U[m],f=f.next}for(_=0;_<L;++_){for(y=_,g=y+L,u=r[y],l=d*u,f=p,b=0;b<d;++b)f.color=u,f=f.next;for(b=1;b<d;++b)f.color=r[g],l+=f.color,f=f.next,g+=L;for(f=p,i=0;i<o;++i)r[y]=l*n>>>h,m=i+d,m=_+(m<c?m:c)*L,l-=f.color-r[m],f.color=r[m],f=f.next,y+=L}return x};v.gaussianBlur=function(e,x,t,U){var r=v.gaussianKernel(U);return x.width=e.width,x.height=e.height,t.width=e.width,t.height=e.height,v.gaussianBlurFilter(e,t,r,!0),v.gaussianBlurFilter(t,x,r,!1),x};v.gaussianBlurFilter=function(e,x,t,U){var r=e.data,o=x.data,L=e.height,c=e.width,a=0,s=t.length>>1,d,n,h,f,p;for(h=0;h<L;++h)for(f=0;f<c;++f){for(n=0,p=-s;p<=s;++p)U?(d=a+p,(f+p<0||f+p>=c)&&(d=a)):(d=a+p*c,(h+p<0||h+p>=L)&&(d=a)),n+=t[s+p]*r[d];o[a++]=U?n:n+.5&255}return x};v.gaussianKernel=function(e){var x=[[1],[.25,.5,.25],[.0625,.25,.375,.25,.0625],[.03125,.109375,.21875,.28125,.21875,.109375,.03125]],t=[],U,r,o,L,c,a;if(e<=7&&e%2==1)t=x[e>>1];else{for(U=(e-1)*.5,r=.8+.3*(U-1),o=-.5/(r*r),L=0,a=0;a<e;++a)c=a-U,L+=t[a]=Math.exp(o*c*c);for(L=1/L,a=0;a<e;++a)t[a]*=L}return t};v.findContours=function(e,x){var t=e.width,U=e.height,r=[],o,L,c,a,s,d,n,h,f;for(o=v.binaryBorder(e,x),L=v.neighborhoodDeltas(t+2),c=t+3,s=1,h=0;h<U;++h,c+=2)for(f=0;f<t;++f,++c)a=o[c],a!==0&&(d=n=!1,a===1&&o[c-1]===0?d=!0:a>=1&&o[c+1]===0&&(n=!0),(d||n)&&(++s,r.push(v.borderFollowing(o,c,s,{x:f,y:h},n,L))));return r};v.borderFollowing=function(e,x,t,U,r,o){var L=[],c,a,s,d,n;L.hole=r,d=n=r?0:4;do if(d=d-1&7,c=x+o[d],e[c]!==0)break;while(d!==n);if(d===n)e[x]=-t,L.push({x:U.x,y:U.y});else for(a=x;;){n=d;do s=a+o[++d];while(e[s]===0);if(d&=7,d-1>>>0<n>>>0?e[a]=-t:e[a]===1&&(e[a]=t),L.push({x:U.x,y:U.y}),U.x+=v.neighborhood[d][0],U.y+=v.neighborhood[d][1],s===x&&a===c)break;a=s,d=d+4&7}return L};v.neighborhood=[[1,0],[1,-1],[0,-1],[-1,-1],[-1,0],[-1,1],[0,1],[1,1]];v.neighborhoodDeltas=function(e){for(var x=[],t=v.neighborhood.length,U=0;U<t;++U)x[U]=v.neighborhood[U][0]+v.neighborhood[U][1]*e;return x.concat(x)};v.approxPolyDP=function(e,x){var t={start_index:0,end_index:0},U={start_index:0,end_index:0},r=[],o=[],L=e.length,c,a,s,d,n,h,f,p,u,l,y;for(x*=x,y=0,u=0;u<3;++u)for(n=0,y=(y+U.start_index)%L,a=e[y],++y===L&&(y=0),l=1;l<L;++l)c=e[y],++y===L&&(y=0),f=c.x-a.x,p=c.y-a.y,d=f*f+p*p,d>n&&(n=d,U.start_index=l);for(n<=x?r.push({x:a.x,y:a.y}):(t.start_index=y,t.end_index=U.start_index+=t.start_index,U.start_index-=U.start_index>=L?L:0,U.end_index=t.start_index,U.end_index<U.start_index&&(U.end_index+=L),o.push({start_index:U.start_index,end_index:U.end_index}),o.push({start_index:t.start_index,end_index:t.end_index}));o.length!==0;){if(t=o.pop(),s=e[t.end_index%L],a=e[y=t.start_index%L],++y===L&&(y=0),t.end_index<=t.start_index+1)h=!0;else{for(n=0,f=s.x-a.x,p=s.y-a.y,u=t.start_index+1;u<t.end_index;++u)c=e[y],++y===L&&(y=0),d=Math.abs((c.y-a.y)*f-(c.x-a.x)*p),d>n&&(n=d,U.start_index=u);h=n*n<=x*(f*f+p*p)}h?r.push({x:a.x,y:a.y}):(U.end_index=t.end_index,t.end_index=U.start_index,o.push({start_index:U.start_index,end_index:U.end_index}),o.push({start_index:t.start_index,end_index:t.end_index}))}return r};v.warp=function(e,x,t,U){var r=e.data,o=x.data,L=e.width,c=e.height,a=0,s,d,n,h,f,p,u,l,y,g,m,_,i,b,j,V,B,O,q,S,F,W,H;for(i=v.getPerspectiveTransform(t,U-1),b=i[8],j=i[2],V=i[5],W=0;W<U;++W)for(b+=i[7],j+=i[1],V+=i[4],B=b,O=j,q=V,H=0;H<U;++H)B+=i[6],O+=i[0],q+=i[3],S=O/B,F=q/B,s=S>>>0,d=s===L-1?s:s+1,n=S-s,h=1-n,f=F>>>0,p=f===c-1?f:f+1,u=F-f,l=1-u,y=g=f*L,m=_=p*L,o[a++]=l*(h*r[y+s]+n*r[g+d])+u*(h*r[m+s]+n*r[_+d])&255;return x.width=U,x.height=U,x};v.getPerspectiveTransform=function(e,x){var t=v.square2quad(e);return t[0]/=x,t[1]/=x,t[3]/=x,t[4]/=x,t[6]/=x,t[7]/=x,t};v.square2quad=function(e){var x=[],t,U,r,o,L,c,a;return t=e[0].x-e[1].x+e[2].x-e[3].x,U=e[0].y-e[1].y+e[2].y-e[3].y,t===0&&U===0?(x[0]=e[1].x-e[0].x,x[1]=e[2].x-e[1].x,x[2]=e[0].x,x[3]=e[1].y-e[0].y,x[4]=e[2].y-e[1].y,x[5]=e[0].y,x[6]=0,x[7]=0,x[8]=1):(r=e[1].x-e[2].x,o=e[3].x-e[2].x,L=e[1].y-e[2].y,c=e[3].y-e[2].y,a=r*c-o*L,x[6]=(t*c-o*U)/a,x[7]=(r*U-t*L)/a,x[8]=1,x[0]=e[1].x-e[0].x+x[6]*e[1].x,x[1]=e[3].x-e[0].x+x[7]*e[3].x,x[2]=e[0].x,x[3]=e[1].y-e[0].y+x[6]*e[1].y,x[4]=e[3].y-e[0].y+x[7]*e[3].y,x[5]=e[0].y),x};v.isContourConvex=function(e){var x=0,t=!0,U=e.length,r=0,o=0,L,c,a,s,d,n,h,f;for(c=e[U-1],L=e[0],d=L.x-c.x,n=L.y-c.y;r<U;++r){if(++o===U&&(o=0),c=L,L=e[o],h=L.x-c.x,f=L.y-c.y,a=h*n,s=f*d,x|=s>a?1:s<a?2:3,x===3){t=!1;break}d=h,n=f}return t};v.perimeter=function(e){for(var x=e.length,t=0,U=x-1,r=0,o,L;t<x;U=t++)o=e[t].x-e[U].x,L=e[t].y-e[U].y,r+=Math.sqrt(o*o+L*L);return r};v.minEdgeLength=function(e){for(var x=e.length,t=0,U=x-1,r=1/0,o,L,c;t<x;U=t++)L=e[t].x-e[U].x,c=e[t].y-e[U].y,o=L*L+c*c,o<r&&(r=o);return Math.sqrt(r)};v.countNonZero=function(e,x){var t=e.data,U=x.height,r=x.width,o=x.x+x.y*e.width,L=e.width-r,c=0,a,s;for(a=0;a<U;++a){for(s=0;s<r;++s)t[o++]!==0&&++c;o+=L}return c};v.binaryBorder=function(e,x){var t=e.data,U=e.height,r=e.width,o=0,L=0,c,a;for(a=-2;a<r;++a)x[L++]=0;for(c=0;c<U;++c){for(x[L++]=0,a=0;a<r;++a)x[L++]=t[o++]===0?0:1;x[L++]=0}for(a=-2;a<r;++a)x[L++]=0;return x};const w={};w.DICTIONARIES={ARUCO:{nBits:25,tau:3,codeList:["0x1084210UL","0x1084217UL","0x1084209UL","0x108420eUL","0x10842f0UL","0x10842f7UL","0x10842e9UL","0x10842eeUL","0x1084130UL","0x1084137UL","0x1084129UL","0x108412eUL","0x10841d0UL","0x10841d7UL","0x10841c9UL","0x10841ceUL","0x1085e10UL","0x1085e17UL","0x1085e09UL","0x1085e0eUL","0x1085ef0UL","0x1085ef7UL","0x1085ee9UL","0x1085eeeUL","0x1085d30UL","0x1085d37UL","0x1085d29UL","0x1085d2eUL","0x1085dd0UL","0x1085dd7UL","0x1085dc9UL","0x1085dceUL","0x1082610UL","0x1082617UL","0x1082609UL","0x108260eUL","0x10826f0UL","0x10826f7UL","0x10826e9UL","0x10826eeUL","0x1082530UL","0x1082537UL","0x1082529UL","0x108252eUL","0x10825d0UL","0x10825d7UL","0x10825c9UL","0x10825ceUL","0x1083a10UL","0x1083a17UL","0x1083a09UL","0x1083a0eUL","0x1083af0UL","0x1083af7UL","0x1083ae9UL","0x1083aeeUL","0x1083930UL","0x1083937UL","0x1083929UL","0x108392eUL","0x10839d0UL","0x10839d7UL","0x10839c9UL","0x10839ceUL","0x10bc210UL","0x10bc217UL","0x10bc209UL","0x10bc20eUL","0x10bc2f0UL","0x10bc2f7UL","0x10bc2e9UL","0x10bc2eeUL","0x10bc130UL","0x10bc137UL","0x10bc129UL","0x10bc12eUL","0x10bc1d0UL","0x10bc1d7UL","0x10bc1c9UL","0x10bc1ceUL","0x10bde10UL","0x10bde17UL","0x10bde09UL","0x10bde0eUL","0x10bdef0UL","0x10bdef7UL","0x10bdee9UL","0x10bdeeeUL","0x10bdd30UL","0x10bdd37UL","0x10bdd29UL","0x10bdd2eUL","0x10bddd0UL","0x10bddd7UL","0x10bddc9UL","0x10bddceUL","0x10ba610UL","0x10ba617UL","0x10ba609UL","0x10ba60eUL","0x10ba6f0UL","0x10ba6f7UL","0x10ba6e9UL","0x10ba6eeUL","0x10ba530UL","0x10ba537UL","0x10ba529UL","0x10ba52eUL","0x10ba5d0UL","0x10ba5d7UL","0x10ba5c9UL","0x10ba5ceUL","0x10bba10UL","0x10bba17UL","0x10bba09UL","0x10bba0eUL","0x10bbaf0UL","0x10bbaf7UL","0x10bbae9UL","0x10bbaeeUL","0x10bb930UL","0x10bb937UL","0x10bb929UL","0x10bb92eUL","0x10bb9d0UL","0x10bb9d7UL","0x10bb9c9UL","0x10bb9ceUL","0x104c210UL","0x104c217UL","0x104c209UL","0x104c20eUL","0x104c2f0UL","0x104c2f7UL","0x104c2e9UL","0x104c2eeUL","0x104c130UL","0x104c137UL","0x104c129UL","0x104c12eUL","0x104c1d0UL","0x104c1d7UL","0x104c1c9UL","0x104c1ceUL","0x104de10UL","0x104de17UL","0x104de09UL","0x104de0eUL","0x104def0UL","0x104def7UL","0x104dee9UL","0x104deeeUL","0x104dd30UL","0x104dd37UL","0x104dd29UL","0x104dd2eUL","0x104ddd0UL","0x104ddd7UL","0x104ddc9UL","0x104ddceUL","0x104a610UL","0x104a617UL","0x104a609UL","0x104a60eUL","0x104a6f0UL","0x104a6f7UL","0x104a6e9UL","0x104a6eeUL","0x104a530UL","0x104a537UL","0x104a529UL","0x104a52eUL","0x104a5d0UL","0x104a5d7UL","0x104a5c9UL","0x104a5ceUL","0x104ba10UL","0x104ba17UL","0x104ba09UL","0x104ba0eUL","0x104baf0UL","0x104baf7UL","0x104bae9UL","0x104baeeUL","0x104b930UL","0x104b937UL","0x104b929UL","0x104b92eUL","0x104b9d0UL","0x104b9d7UL","0x104b9c9UL","0x104b9ceUL","0x1074210UL","0x1074217UL","0x1074209UL","0x107420eUL","0x10742f0UL","0x10742f7UL","0x10742e9UL","0x10742eeUL","0x1074130UL","0x1074137UL","0x1074129UL","0x107412eUL","0x10741d0UL","0x10741d7UL","0x10741c9UL","0x10741ceUL","0x1075e10UL","0x1075e17UL","0x1075e09UL","0x1075e0eUL","0x1075ef0UL","0x1075ef7UL","0x1075ee9UL","0x1075eeeUL","0x1075d30UL","0x1075d37UL","0x1075d29UL","0x1075d2eUL","0x1075dd0UL","0x1075dd7UL","0x1075dc9UL","0x1075dceUL","0x1072610UL","0x1072617UL","0x1072609UL","0x107260eUL","0x10726f0UL","0x10726f7UL","0x10726e9UL","0x10726eeUL","0x1072530UL","0x1072537UL","0x1072529UL","0x107252eUL","0x10725d0UL","0x10725d7UL","0x10725c9UL","0x10725ceUL","0x1073a10UL","0x1073a17UL","0x1073a09UL","0x1073a0eUL","0x1073af0UL","0x1073af7UL","0x1073ae9UL","0x1073aeeUL","0x1073930UL","0x1073937UL","0x1073929UL","0x107392eUL","0x10739d0UL","0x10739d7UL","0x10739c9UL","0x10739ceUL","0x1784210UL","0x1784217UL","0x1784209UL","0x178420eUL","0x17842f0UL","0x17842f7UL","0x17842e9UL","0x17842eeUL","0x1784130UL","0x1784137UL","0x1784129UL","0x178412eUL","0x17841d0UL","0x17841d7UL","0x17841c9UL","0x17841ceUL","0x1785e10UL","0x1785e17UL","0x1785e09UL","0x1785e0eUL","0x1785ef0UL","0x1785ef7UL","0x1785ee9UL","0x1785eeeUL","0x1785d30UL","0x1785d37UL","0x1785d29UL","0x1785d2eUL","0x1785dd0UL","0x1785dd7UL","0x1785dc9UL","0x1785dceUL","0x1782610UL","0x1782617UL","0x1782609UL","0x178260eUL","0x17826f0UL","0x17826f7UL","0x17826e9UL","0x17826eeUL","0x1782530UL","0x1782537UL","0x1782529UL","0x178252eUL","0x17825d0UL","0x17825d7UL","0x17825c9UL","0x17825ceUL","0x1783a10UL","0x1783a17UL","0x1783a09UL","0x1783a0eUL","0x1783af0UL","0x1783af7UL","0x1783ae9UL","0x1783aeeUL","0x1783930UL","0x1783937UL","0x1783929UL","0x178392eUL","0x17839d0UL","0x17839d7UL","0x17839c9UL","0x17839ceUL","0x17bc210UL","0x17bc217UL","0x17bc209UL","0x17bc20eUL","0x17bc2f0UL","0x17bc2f7UL","0x17bc2e9UL","0x17bc2eeUL","0x17bc130UL","0x17bc137UL","0x17bc129UL","0x17bc12eUL","0x17bc1d0UL","0x17bc1d7UL","0x17bc1c9UL","0x17bc1ceUL","0x17bde10UL","0x17bde17UL","0x17bde09UL","0x17bde0eUL","0x17bdef0UL","0x17bdef7UL","0x17bdee9UL","0x17bdeeeUL","0x17bdd30UL","0x17bdd37UL","0x17bdd29UL","0x17bdd2eUL","0x17bddd0UL","0x17bddd7UL","0x17bddc9UL","0x17bddceUL","0x17ba610UL","0x17ba617UL","0x17ba609UL","0x17ba60eUL","0x17ba6f0UL","0x17ba6f7UL","0x17ba6e9UL","0x17ba6eeUL","0x17ba530UL","0x17ba537UL","0x17ba529UL","0x17ba52eUL","0x17ba5d0UL","0x17ba5d7UL","0x17ba5c9UL","0x17ba5ceUL","0x17bba10UL","0x17bba17UL","0x17bba09UL","0x17bba0eUL","0x17bbaf0UL","0x17bbaf7UL","0x17bbae9UL","0x17bbaeeUL","0x17bb930UL","0x17bb937UL","0x17bb929UL","0x17bb92eUL","0x17bb9d0UL","0x17bb9d7UL","0x17bb9c9UL","0x17bb9ceUL","0x174c210UL","0x174c217UL","0x174c209UL","0x174c20eUL","0x174c2f0UL","0x174c2f7UL","0x174c2e9UL","0x174c2eeUL","0x174c130UL","0x174c137UL","0x174c129UL","0x174c12eUL","0x174c1d0UL","0x174c1d7UL","0x174c1c9UL","0x174c1ceUL","0x174de10UL","0x174de17UL","0x174de09UL","0x174de0eUL","0x174def0UL","0x174def7UL","0x174dee9UL","0x174deeeUL","0x174dd30UL","0x174dd37UL","0x174dd29UL","0x174dd2eUL","0x174ddd0UL","0x174ddd7UL","0x174ddc9UL","0x174ddceUL","0x174a610UL","0x174a617UL","0x174a609UL","0x174a60eUL","0x174a6f0UL","0x174a6f7UL","0x174a6e9UL","0x174a6eeUL","0x174a530UL","0x174a537UL","0x174a529UL","0x174a52eUL","0x174a5d0UL","0x174a5d7UL","0x174a5c9UL","0x174a5ceUL","0x174ba10UL","0x174ba17UL","0x174ba09UL","0x174ba0eUL","0x174baf0UL","0x174baf7UL","0x174bae9UL","0x174baeeUL","0x174b930UL","0x174b937UL","0x174b929UL","0x174b92eUL","0x174b9d0UL","0x174b9d7UL","0x174b9c9UL","0x174b9ceUL","0x1774210UL","0x1774217UL","0x1774209UL","0x177420eUL","0x17742f0UL","0x17742f7UL","0x17742e9UL","0x17742eeUL","0x1774130UL","0x1774137UL","0x1774129UL","0x177412eUL","0x17741d0UL","0x17741d7UL","0x17741c9UL","0x17741ceUL","0x1775e10UL","0x1775e17UL","0x1775e09UL","0x1775e0eUL","0x1775ef0UL","0x1775ef7UL","0x1775ee9UL","0x1775eeeUL","0x1775d30UL","0x1775d37UL","0x1775d29UL","0x1775d2eUL","0x1775dd0UL","0x1775dd7UL","0x1775dc9UL","0x1775dceUL","0x1772610UL","0x1772617UL","0x1772609UL","0x177260eUL","0x17726f0UL","0x17726f7UL","0x17726e9UL","0x17726eeUL","0x1772530UL","0x1772537UL","0x1772529UL","0x177252eUL","0x17725d0UL","0x17725d7UL","0x17725c9UL","0x17725ceUL","0x1773a10UL","0x1773a17UL","0x1773a09UL","0x1773a0eUL","0x1773af0UL","0x1773af7UL","0x1773ae9UL","0x1773aeeUL","0x1773930UL","0x1773937UL","0x1773929UL","0x177392eUL","0x17739d0UL","0x17739d7UL","0x17739c9UL","0x17739ceUL","0x984210UL","0x984217UL","0x984209UL","0x98420eUL","0x9842f0UL","0x9842f7UL","0x9842e9UL","0x9842eeUL","0x984130UL","0x984137UL","0x984129UL","0x98412eUL","0x9841d0UL","0x9841d7UL","0x9841c9UL","0x9841ceUL","0x985e10UL","0x985e17UL","0x985e09UL","0x985e0eUL","0x985ef0UL","0x985ef7UL","0x985ee9UL","0x985eeeUL","0x985d30UL","0x985d37UL","0x985d29UL","0x985d2eUL","0x985dd0UL","0x985dd7UL","0x985dc9UL","0x985dceUL","0x982610UL","0x982617UL","0x982609UL","0x98260eUL","0x9826f0UL","0x9826f7UL","0x9826e9UL","0x9826eeUL","0x982530UL","0x982537UL","0x982529UL","0x98252eUL","0x9825d0UL","0x9825d7UL","0x9825c9UL","0x9825ceUL","0x983a10UL","0x983a17UL","0x983a09UL","0x983a0eUL","0x983af0UL","0x983af7UL","0x983ae9UL","0x983aeeUL","0x983930UL","0x983937UL","0x983929UL","0x98392eUL","0x9839d0UL","0x9839d7UL","0x9839c9UL","0x9839ceUL","0x9bc210UL","0x9bc217UL","0x9bc209UL","0x9bc20eUL","0x9bc2f0UL","0x9bc2f7UL","0x9bc2e9UL","0x9bc2eeUL","0x9bc130UL","0x9bc137UL","0x9bc129UL","0x9bc12eUL","0x9bc1d0UL","0x9bc1d7UL","0x9bc1c9UL","0x9bc1ceUL","0x9bde10UL","0x9bde17UL","0x9bde09UL","0x9bde0eUL","0x9bdef0UL","0x9bdef7UL","0x9bdee9UL","0x9bdeeeUL","0x9bdd30UL","0x9bdd37UL","0x9bdd29UL","0x9bdd2eUL","0x9bddd0UL","0x9bddd7UL","0x9bddc9UL","0x9bddceUL","0x9ba610UL","0x9ba617UL","0x9ba609UL","0x9ba60eUL","0x9ba6f0UL","0x9ba6f7UL","0x9ba6e9UL","0x9ba6eeUL","0x9ba530UL","0x9ba537UL","0x9ba529UL","0x9ba52eUL","0x9ba5d0UL","0x9ba5d7UL","0x9ba5c9UL","0x9ba5ceUL","0x9bba10UL","0x9bba17UL","0x9bba09UL","0x9bba0eUL","0x9bbaf0UL","0x9bbaf7UL","0x9bbae9UL","0x9bbaeeUL","0x9bb930UL","0x9bb937UL","0x9bb929UL","0x9bb92eUL","0x9bb9d0UL","0x9bb9d7UL","0x9bb9c9UL","0x9bb9ceUL","0x94c210UL","0x94c217UL","0x94c209UL","0x94c20eUL","0x94c2f0UL","0x94c2f7UL","0x94c2e9UL","0x94c2eeUL","0x94c130UL","0x94c137UL","0x94c129UL","0x94c12eUL","0x94c1d0UL","0x94c1d7UL","0x94c1c9UL","0x94c1ceUL","0x94de10UL","0x94de17UL","0x94de09UL","0x94de0eUL","0x94def0UL","0x94def7UL","0x94dee9UL","0x94deeeUL","0x94dd30UL","0x94dd37UL","0x94dd29UL","0x94dd2eUL","0x94ddd0UL","0x94ddd7UL","0x94ddc9UL","0x94ddceUL","0x94a610UL","0x94a617UL","0x94a609UL","0x94a60eUL","0x94a6f0UL","0x94a6f7UL","0x94a6e9UL","0x94a6eeUL","0x94a530UL","0x94a537UL","0x94a529UL","0x94a52eUL","0x94a5d0UL","0x94a5d7UL","0x94a5c9UL","0x94a5ceUL","0x94ba10UL","0x94ba17UL","0x94ba09UL","0x94ba0eUL","0x94baf0UL","0x94baf7UL","0x94bae9UL","0x94baeeUL","0x94b930UL","0x94b937UL","0x94b929UL","0x94b92eUL","0x94b9d0UL","0x94b9d7UL","0x94b9c9UL","0x94b9ceUL","0x974210UL","0x974217UL","0x974209UL","0x97420eUL","0x9742f0UL","0x9742f7UL","0x9742e9UL","0x9742eeUL","0x974130UL","0x974137UL","0x974129UL","0x97412eUL","0x9741d0UL","0x9741d7UL","0x9741c9UL","0x9741ceUL","0x975e10UL","0x975e17UL","0x975e09UL","0x975e0eUL","0x975ef0UL","0x975ef7UL","0x975ee9UL","0x975eeeUL","0x975d30UL","0x975d37UL","0x975d29UL","0x975d2eUL","0x975dd0UL","0x975dd7UL","0x975dc9UL","0x975dceUL","0x972610UL","0x972617UL","0x972609UL","0x97260eUL","0x9726f0UL","0x9726f7UL","0x9726e9UL","0x9726eeUL","0x972530UL","0x972537UL","0x972529UL","0x97252eUL","0x9725d0UL","0x9725d7UL","0x9725c9UL","0x9725ceUL","0x973a10UL","0x973a17UL","0x973a09UL","0x973a0eUL","0x973af0UL","0x973af7UL","0x973ae9UL","0x973aeeUL","0x973930UL","0x973937UL","0x973929UL","0x97392eUL","0x9739d0UL","0x9739d7UL","0x9739c9UL","0x9739ceUL","0xe84210UL","0xe84217UL","0xe84209UL","0xe8420eUL","0xe842f0UL","0xe842f7UL","0xe842e9UL","0xe842eeUL","0xe84130UL","0xe84137UL","0xe84129UL","0xe8412eUL","0xe841d0UL","0xe841d7UL","0xe841c9UL","0xe841ceUL","0xe85e10UL","0xe85e17UL","0xe85e09UL","0xe85e0eUL","0xe85ef0UL","0xe85ef7UL","0xe85ee9UL","0xe85eeeUL","0xe85d30UL","0xe85d37UL","0xe85d29UL","0xe85d2eUL","0xe85dd0UL","0xe85dd7UL","0xe85dc9UL","0xe85dceUL","0xe82610UL","0xe82617UL","0xe82609UL","0xe8260eUL","0xe826f0UL","0xe826f7UL","0xe826e9UL","0xe826eeUL","0xe82530UL","0xe82537UL","0xe82529UL","0xe8252eUL","0xe825d0UL","0xe825d7UL","0xe825c9UL","0xe825ceUL","0xe83a10UL","0xe83a17UL","0xe83a09UL","0xe83a0eUL","0xe83af0UL","0xe83af7UL","0xe83ae9UL","0xe83aeeUL","0xe83930UL","0xe83937UL","0xe83929UL","0xe8392eUL","0xe839d0UL","0xe839d7UL","0xe839c9UL","0xe839ceUL","0xebc210UL","0xebc217UL","0xebc209UL","0xebc20eUL","0xebc2f0UL","0xebc2f7UL","0xebc2e9UL","0xebc2eeUL","0xebc130UL","0xebc137UL","0xebc129UL","0xebc12eUL","0xebc1d0UL","0xebc1d7UL","0xebc1c9UL","0xebc1ceUL","0xebde10UL","0xebde17UL","0xebde09UL","0xebde0eUL","0xebdef0UL","0xebdef7UL","0xebdee9UL","0xebdeeeUL","0xebdd30UL","0xebdd37UL","0xebdd29UL","0xebdd2eUL","0xebddd0UL","0xebddd7UL","0xebddc9UL","0xebddceUL","0xeba610UL","0xeba617UL","0xeba609UL","0xeba60eUL","0xeba6f0UL","0xeba6f7UL","0xeba6e9UL","0xeba6eeUL","0xeba530UL","0xeba537UL","0xeba529UL","0xeba52eUL","0xeba5d0UL","0xeba5d7UL","0xeba5c9UL","0xeba5ceUL","0xebba10UL","0xebba17UL","0xebba09UL","0xebba0eUL","0xebbaf0UL","0xebbaf7UL","0xebbae9UL","0xebbaeeUL","0xebb930UL","0xebb937UL","0xebb929UL","0xebb92eUL","0xebb9d0UL","0xebb9d7UL","0xebb9c9UL","0xebb9ceUL","0xe4c210UL","0xe4c217UL","0xe4c209UL","0xe4c20eUL","0xe4c2f0UL","0xe4c2f7UL","0xe4c2e9UL","0xe4c2eeUL","0xe4c130UL","0xe4c137UL","0xe4c129UL","0xe4c12eUL","0xe4c1d0UL","0xe4c1d7UL","0xe4c1c9UL","0xe4c1ceUL","0xe4de10UL","0xe4de17UL","0xe4de09UL","0xe4de0eUL","0xe4def0UL","0xe4def7UL","0xe4dee9UL","0xe4deeeUL","0xe4dd30UL","0xe4dd37UL","0xe4dd29UL","0xe4dd2eUL","0xe4ddd0UL","0xe4ddd7UL","0xe4ddc9UL","0xe4ddceUL","0xe4a610UL","0xe4a617UL","0xe4a609UL","0xe4a60eUL","0xe4a6f0UL","0xe4a6f7UL","0xe4a6e9UL","0xe4a6eeUL","0xe4a530UL","0xe4a537UL","0xe4a529UL","0xe4a52eUL","0xe4a5d0UL","0xe4a5d7UL","0xe4a5c9UL","0xe4a5ceUL","0xe4ba10UL","0xe4ba17UL","0xe4ba09UL","0xe4ba0eUL","0xe4baf0UL","0xe4baf7UL","0xe4bae9UL","0xe4baeeUL","0xe4b930UL","0xe4b937UL","0xe4b929UL","0xe4b92eUL","0xe4b9d0UL","0xe4b9d7UL","0xe4b9c9UL","0xe4b9ceUL","0xe74210UL","0xe74217UL","0xe74209UL","0xe7420eUL","0xe742f0UL","0xe742f7UL","0xe742e9UL","0xe742eeUL","0xe74130UL","0xe74137UL","0xe74129UL","0xe7412eUL","0xe741d0UL","0xe741d7UL","0xe741c9UL","0xe741ceUL","0xe75e10UL","0xe75e17UL","0xe75e09UL","0xe75e0eUL","0xe75ef0UL","0xe75ef7UL","0xe75ee9UL","0xe75eeeUL","0xe75d30UL","0xe75d37UL","0xe75d29UL","0xe75d2eUL","0xe75dd0UL","0xe75dd7UL","0xe75dc9UL","0xe75dceUL","0xe72610UL","0xe72617UL","0xe72609UL","0xe7260eUL","0xe726f0UL","0xe726f7UL","0xe726e9UL","0xe726eeUL","0xe72530UL","0xe72537UL","0xe72529UL","0xe7252eUL","0xe725d0UL","0xe725d7UL","0xe725c9UL","0xe725ceUL","0xe73a10UL","0xe73a17UL","0xe73a09UL","0xe73a0eUL","0xe73af0UL","0xe73af7UL","0xe73ae9UL","0xe73aeeUL","0xe73930UL","0xe73937UL","0xe73929UL","0xe7392eUL","0xe739d0UL","0xe739d7UL","0xe739c9UL"]},ARUCO_MIP_36h12:{nBits:36,tau:12,codeList:["0xd2b63a09dUL","0x6001134e5UL","0x1206fbe72UL","0xff8ad6cb4UL","0x85da9bc49UL","0xb461afe9cUL","0x6db51fe13UL","0x5248c541fUL","0x8f34503UL","0x8ea462eceUL","0xeac2be76dUL","0x1af615c44UL","0xb48a49f27UL","0x2e4e1283bUL","0x78b1f2fa8UL","0x27d34f57eUL","0x89222fff1UL","0x4c1669406UL","0xbf49b3511UL","0xdc191cd5dUL","0x11d7c3f85UL","0x16a130e35UL","0xe29f27effUL","0x428d8ae0cUL","0x90d548477UL","0x2319cbc93UL","0xc3b0c3dfcUL","0x424bccc9UL","0x2a081d630UL","0x762743d96UL","0xd0645bf19UL","0xf38d7fd60UL","0xc6cbf9a10UL","0x3c1be7c65UL","0x276f75e63UL","0x4490a3f63UL","0xda60acd52UL","0x3cc68df59UL","0xab46f9daeUL","0x88d533d78UL","0xb6d62ec21UL","0xb3c02b646UL","0x22e56d408UL","0xac5f5770aUL","0xaaa993f66UL","0x4caa07c8dUL","0x5c9b4f7b0UL","0xaa9ef0e05UL","0x705c5750UL","0xac81f545eUL","0x735b91e74UL","0x8cc35cee4UL","0xe44694d04UL","0xb5e121de0UL","0x261017d0fUL","0xf1d439eb5UL","0xa1a33ac96UL","0x174c62c02UL","0x1ee27f716UL","0x8b1c5ece9UL","0x6a05b0c6aUL","0xd0568dfcUL","0x192d25e5fUL","0x1adbeccc8UL","0xcfec87f00UL","0xd0b9dde7aUL","0x88dcef81eUL","0x445681cb9UL","0xdbb2ffc83UL","0xa48d96df1UL","0xb72cc2e7dUL","0xc295b53fUL","0xf49832704UL","0x9968edc29UL","0x9e4e1af85UL","0x8683e2d1bUL","0x810b45c04UL","0x6ac44bfe2UL","0x645346615UL","0x3990bd598UL","0x1c9ed0f6aUL","0xc26729d65UL","0x83993f795UL","0x3ac05ac5dUL","0x357adff3bUL","0xd5c05565UL","0x2f547ef44UL","0x86c115041UL","0x640fd9e5fUL","0xce08bbcf7UL","0x109bb343eUL","0xc21435c92UL","0x35b4dfce4UL","0x459752cf2UL","0xec915b82cUL","0x51881eed0UL","0x2dda7dc97UL","0x2e0142144UL","0x42e890f99UL","0x9a8856527UL","0x8e80d9d80UL","0x891cbcf34UL","0x25dd82410UL","0x239551d34UL","0x8fe8f0c70UL","0x94106a970UL","0x82609b40cUL","0xfc9caf36UL","0x688181d11UL","0x718613c08UL","0xf1ab7629UL","0xa357bfc18UL","0x4c03b7a46UL","0x204dedce6UL","0xad6300d37UL","0x84cc4cd09UL","0x42160e5c4UL","0x87d2adfa8UL","0x7850e7749UL","0x4e750fc7cUL","0xbf2e5dfdaUL","0xd88324da5UL","0x234b52f80UL","0x378204514UL","0xabdf2ad53UL","0x365e78ef9UL","0x49caa6ca2UL","0x3c39ddf3UL","0xc68c5385dUL","0x5bfcbbf67UL","0x623241e21UL","0xabc90d5ccUL","0x388c6fe85UL","0xda0e2d62dUL","0x10855dfe9UL","0x4d46efd6bUL","0x76ea12d61UL","0x9db377d3dUL","0xeed0efa71UL","0xe6ec3ae2fUL","0x441faee83UL","0xba19c8ff5UL","0x313035eabUL","0x6ce8f7625UL","0x880dab58dUL","0x8d3409e0dUL","0x2be92ee21UL","0xd60302c6cUL","0x469ffc724UL","0x87eebeed3UL","0x42587ef7aUL","0x7a8cc4e52UL","0x76a437650UL","0x999e41ef4UL","0x7d0969e42UL","0xc02baf46bUL","0x9259f3e47UL","0x2116a1dc0UL","0x9f2de4d84UL","0xeffac29UL","0x7b371ff8cUL","0x668339da9UL","0xd010aee3fUL","0x1cd00b4c0UL","0x95070fc3bUL","0xf84c9a770UL","0x38f863d76UL","0x3646ff045UL","0xce1b96412UL","0x7a5d45da8UL","0x14e00ef6cUL","0x5e95abfd8UL","0xb2e9cb729UL","0x36c47dd7UL","0xb8ee97c6bUL","0xe9e8f657UL","0xd4ad2ef1aUL","0x8811c7f32UL","0x47bde7c31UL","0x3adadfb64UL","0x6e5b28574UL","0x33e67cd91UL","0x2ab9fdd2dUL","0x8afa67f2bUL","0xe6a28fc5eUL","0x72049cdbdUL","0xae65dac12UL","0x1251a4526UL","0x1089ab841UL","0xe2f096ee0UL","0xb0caee573UL","0xfd6677e86UL","0x444b3f518UL","0xbe8b3a56aUL","0x680a75cfcUL","0xac02baea8UL","0x97d815e1cUL","0x1d4386e08UL","0x1a14f5b0eUL","0xe658a8d81UL","0xa3868efa7UL","0x3668a9673UL","0xe8fc53d85UL","0x2e2b7edd5UL","0x8b2470f13UL","0xf69795f32UL","0x4589ffc8eUL","0x2e2080c9cUL","0x64265f7dUL","0x3d714dd10UL","0x1692c6ef1UL","0x3e67f2f49UL","0x5041dad63UL","0x1a1503415UL","0x64c18c742UL","0xa72eec35UL","0x1f0f9dc60UL","0xa9559bc67UL","0xf32911d0dUL","0x21c0d4ffcUL","0xe01cef5b0UL","0x4e23a3520UL","0xaa4f04e49UL","0xe1c4fcc43UL","0x208e8f6e8UL","0x8486774a5UL","0x9e98c7558UL","0x2c59fb7dcUL","0x9446a4613UL","0x8292dcc2eUL","0x4d61631UL","0xd05527809UL","0xa0163852dUL","0x8f657f639UL","0xcca6c3e37UL","0xcb136bc7aUL","0xfc5a83e53UL","0x9aa44fc30UL","0xbdec1bd3cUL","0xe020b9f7cUL","0x4b8f35fb0UL","0xb8165f637UL","0x33dc88d69UL","0x10a2f7e4dUL","0xc8cb5ff53UL","0xde259ff6bUL","0x46d070dd4UL","0x32d3b9741UL","0x7075f1c04UL","0x4d58dbea0UL"]}};w.Dictionary=function(e){this.codes={},this.codeList=[],this.tau=0,this._initialize(e)};w.Dictionary.prototype._initialize=function(e){this.codes={},this.codeList=[],this.tau=0,this.nBits=0,this.markSize=0,this.dicName=e;var x=w.DICTIONARIES[e];if(!x)throw'The dictionary "'+e+'" is not recognized.';this.nBits=x.nBits,this.markSize=Math.sqrt(x.nBits)+2;for(var t=0;t<x.codeList.length;t++){var U=this._hex2bin(x.codeList[t],x.nBits);this.codeList.push(U),this.codes[U]={id:t}}this.tau=x.tau||this._calculateTau()};w.Dictionary.prototype.find=function(e){var x="",t,U;for(t=0;t<e.length;t++){var r=e[t];for(U=0;U<r.length;U++)x+=r[U]}var o=this.codes[x];if(o)return{id:o.id,distance:0};for(t=0;t<this.codeList.length;t++){var L=this.codeList[t],c=this._hammingDistance(x,L);this._hammingDistance(x,L)<this.tau&&(!o||o.distance>c)&&(o={id:this.codes[L].id,distance:c})}return o};w.Dictionary.prototype._hex2bin=function(e,x){return parseInt(e,16).toString(2).padStart(x,"0")};w.Dictionary.prototype._hammingDistance=function(e,x){if(e.length!=x.length)throw"Hamming distance calculation require inputs of the same length";var t=0,U;for(U=0;U<e.length;U++)e[U]!==x[U]&&(t+=1);return t};w.Dictionary.prototype._calculateTau=function(){for(var e=Number.MAX_VALUE,x=0;x<this.codeList.length;x++)for(var t=x+1;t<this.codeList.length;t++){var U=this._hammingDistance(this.codeList[x],this.codeList[t]);e=U<e?U:e}return e};w.Dictionary.prototype.generateSVG=function(e){var x=this.codeList[e];if(x==null)throw'The id "'+e+'" is not valid for the dictionary "'+this.dicName+'". ID must be between 0 and '+(this.codeList.length-1)+" included.";var t=this.markSize-2,U='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 '+(t+4)+" "+(t+4)+'">';U+='<rect x="0" y="0" width="'+(t+4)+'" height="'+(t+4)+'" fill="white"/>',U+='<rect x="1" y="1" width="'+(t+2)+'" height="'+(t+2)+'" fill="black"/>';for(var r=0;r<t;r++)for(var o=0;o<t;o++)x[r*t+o]=="1"&&(U+='<rect x="'+(o+2)+'" y="'+(r+2)+'" width="1" height="1" fill="white"/>');return U+="</svg>",U};w.Marker=function(e,x,t){this.id=e,this.corners=x,this.hammingDistance=t};w.Detector=function(e){e=e||{},this.grey=new v.Image,this.thres=new v.Image,this.homography=new v.Image,this.binary=[],this.contours=[],this.polys=[],this.candidates=[],e.dictionaryName=e.dictionaryName||"ARUCO_MIP_36h12",this.dictionary=new w.Dictionary(e.dictionaryName),this.dictionary.tau=e.maxHammingDistance!=null?e.maxHammingDistance:this.dictionary.tau};w.Detector.prototype.detectImage=function(e,x,t){return this.detect({width:e,height:x,data:t})};w.Detector.prototype.detectStreamInit=function(e,x,t){this.streamConfig={},this.streamConfig.width=e,this.streamConfig.height=x,this.streamConfig.imageSize=e*x*4,this.streamConfig.index=0,this.streamConfig.imageData=new Uint8ClampedArray(this.streamConfig.imageSize),this.streamConfig.callback=t||function(U,r){}};w.Detector.prototype.detectStream=function(e){for(var x=0;x<e.length;x++)if(this.streamConfig.imageData[this.streamConfig.index]=e[x],this.streamConfig.index=(this.streamConfig.index+1)%this.streamConfig.imageSize,this.streamConfig.index==0){var t={width:this.streamConfig.width,height:this.streamConfig.height,data:this.streamConfig.imageData},U=this.detect(t);this.streamConfig.callback(t,U)}};w.Detector.prototype.detect=function(e){return v.grayscale(e,this.grey),v.adaptiveThreshold(this.grey,this.thres,2,7),this.contours=v.findContours(this.thres,this.binary),this.candidates=this.findCandidates(this.contours,e.width*.01,.05,10),this.candidates=this.clockwiseCorners(this.candidates),this.candidates=this.notTooNear(this.candidates,10),this.findMarkers(this.grey,this.candidates,49)};w.Detector.prototype.findCandidates=function(e,x,t,U){var r=[],o=e.length,L,c,a;for(this.polys=[],a=0;a<o;++a)L=e[a],L.length>=x&&(c=v.approxPolyDP(L,L.length*t),this.polys.push(c),c.length===4&&v.isContourConvex(c)&&v.minEdgeLength(c)>=U&&r.push(c));return r};w.Detector.prototype.clockwiseCorners=function(e){var x=e.length,t,U,r,o,L,c;for(c=0;c<x;++c)t=e[c][1].x-e[c][0].x,r=e[c][1].y-e[c][0].y,U=e[c][2].x-e[c][0].x,o=e[c][2].y-e[c][0].y,t*o-r*U<0&&(L=e[c][1],e[c][1]=e[c][3],e[c][3]=L);return e};w.Detector.prototype.notTooNear=function(e,x){var t=[],U=e.length,r,o,L,c,a,s;for(c=0;c<U;++c)for(a=c+1;a<U;++a){for(r=0,s=0;s<4;++s)o=e[c][s].x-e[a][s].x,L=e[c][s].y-e[a][s].y,r+=o*o+L*L;r/4<x*x&&(v.perimeter(e[c])<v.perimeter(e[a])?e[c].tooNear=!0:e[a].tooNear=!0)}for(c=0;c<U;++c)e[c].tooNear||t.push(e[c]);return t};w.Detector.prototype.findMarkers=function(e,x,t){var U=[],r=x.length,o,L,c;for(c=0;c<r;++c)o=x[c],v.warp(e,this.homography,o,t),v.threshold(this.homography,this.homography,v.otsu(this.homography)),L=this.getMarker(this.homography,o),L&&U.push(L);return U};w.Detector.prototype.getMarker=function(e,x){var t=this.dictionary.markSize,U=e.width/t>>>0,r=U*U>>1,o=[],L=[],c,a,s,d;for(s=0;s<t;++s)for(a=s===0||t-1===s?1:t-1,d=0;d<t;d+=a)if(c={x:d*U,y:s*U,width:U,height:U},v.countNonZero(e,c)>r)return null;for(s=0;s<t-2;++s)for(o[s]=[],d=0;d<t-2;++d)c={x:(d+1)*U,y:(s+1)*U,width:U,height:U},o[s][d]=v.countNonZero(e,c)>r?1:0;L[0]=o;var n=null,h=0;for(s=0;s<4;s++){var f=this.dictionary.find(L[s]);if(f&&(n===null||f.distance<n.distance)&&(n=f,h=s,n.distance===0))break;L[s+1]=this.rotate(L[s])}return n?new w.Marker(n.id,this.rotate2(x,4-h),n.distance):null};w.Detector.prototype.rotate=function(e){var x=[],t=e.length,U,r;for(U=0;U<t;++U)for(x[U]=[],r=0;r<e[U].length;++r)x[U][r]=e[e[U].length-r-1][U];return x};w.Detector.prototype.rotate2=function(e,x){var t=[],U=e.length,r;for(r=0;r<U;++r)t[r]=e[(x+r)%U];return t};const R={};R.svdcmp=function(e,x,t,U,r){var o,L,c,a,s,d,n,h,f=0,p,u,l=0,y,g,m=0,_,i,b,j=[];for(L=0;L<t;++L){if(n=L+1,j[L]=m*l,l=g=m=0,L<x){for(d=L;d<x;++d)m+=Math.abs(e[d][L]);if(m!==0){for(d=L;d<x;++d)e[d][L]/=m,g+=e[d][L]*e[d][L];for(u=e[L][L],l=-R.sign(Math.sqrt(g),u),y=u*l-g,e[L][L]=u-l,a=n;a<t;++a){for(g=0,d=L;d<x;++d)g+=e[d][L]*e[d][a];for(u=g/y,d=L;d<x;++d)e[d][a]+=u*e[d][L]}for(d=L;d<x;++d)e[d][L]*=m}}if(U[L]=m*l,l=g=m=0,L<x&&L!==t-1){for(d=n;d<t;++d)m+=Math.abs(e[L][d]);if(m!==0){for(d=n;d<t;++d)e[L][d]/=m,g+=e[L][d]*e[L][d];for(u=e[L][n],l=-R.sign(Math.sqrt(g),u),y=u*l-g,e[L][n]=u-l,d=n;d<t;++d)j[d]=e[L][d]/y;for(a=n;a<x;++a){for(g=0,d=n;d<t;++d)g+=e[a][d]*e[L][d];for(d=n;d<t;++d)e[a][d]+=g*j[d]}for(d=n;d<t;++d)e[L][d]*=m}}f=Math.max(f,Math.abs(U[L])+Math.abs(j[L]))}for(L=t-1;L>=0;--L){if(L<t-1){if(l!==0){for(a=n;a<t;++a)r[a][L]=e[L][a]/e[L][n]/l;for(a=n;a<t;++a){for(g=0,d=n;d<t;++d)g+=e[L][d]*r[d][a];for(d=n;d<t;++d)r[d][a]+=g*r[d][L]}}for(a=n;a<t;++a)r[L][a]=r[a][L]=0}r[L][L]=1,l=j[L],n=L}for(L=Math.min(t,x)-1;L>=0;--L){for(n=L+1,l=U[L],a=n;a<t;++a)e[L][a]=0;if(l!==0){for(l=1/l,a=n;a<t;++a){for(g=0,d=n;d<x;++d)g+=e[d][L]*e[d][a];for(u=g/e[L][L]*l,d=L;d<x;++d)e[d][a]+=u*e[d][L]}for(a=L;a<x;++a)e[a][L]*=l}else for(a=L;a<x;++a)e[a][L]=0;++e[L][L]}for(d=t-1;d>=0;--d)for(c=1;c<=30;++c){for(o=!0,n=d;n>=0;--n){if(h=n-1,Math.abs(j[n])+f===f){o=!1;break}if(Math.abs(U[h])+f===f)break}if(o)for(p=0,g=1,L=n;L<=d&&(u=g*j[L],Math.abs(u)+f!==f);++L)for(l=U[L],y=R.pythag(u,l),U[L]=y,y=1/y,p=l*y,g=-u*y,a=1;a<=x;++a)i=e[a][h],b=e[a][L],e[a][h]=i*p+b*g,e[a][L]=b*p-i*g;if(b=U[d],n===d){if(b<0)for(U[d]=-b,a=0;a<t;++a)r[a][d]=-r[a][d];break}if(c===30)return!1;for(_=U[n],h=d-1,i=U[h],l=j[h],y=j[d],u=((i-b)*(i+b)+(l-y)*(l+y))/(2*y*i),l=R.pythag(u,1),u=((_-b)*(_+b)+y*(i/(u+R.sign(l,u))-y))/_,p=g=1,a=n;a<=h;++a){for(L=a+1,l=j[L],i=U[L],y=g*l,l=p*l,b=R.pythag(u,y),j[a]=b,p=u/b,g=y/b,u=_*p+l*g,l=l*p-_*g,y=i*g,i*=p,s=0;s<t;++s)_=r[s][a],b=r[s][L],r[s][a]=_*p+b*g,r[s][L]=b*p-_*g;for(b=R.pythag(u,y),U[a]=b,b!==0&&(b=1/b,p=u*b,g=y*b),u=p*l+g*i,_=p*i-g*l,s=0;s<x;++s)i=e[s][a],b=e[s][L],e[s][a]=i*p+b*g,e[s][L]=b*p-i*g}j[n]=0,j[d]=u,U[d]=_}return!0};R.pythag=function(e,x){var t=Math.abs(e),U=Math.abs(x),r;return t>U?(r=U/t,t*Math.sqrt(1+r*r)):U===0?0:(r=t/U,U*Math.sqrt(1+r*r))};R.sign=function(e,x){return x>=0?Math.abs(e):-Math.abs(e)};const C={};C.Posit=function(e,x){this.objectPoints=this.buildModel(e),this.focalLength=x,this.objectVectors=[],this.objectNormal=[],this.objectMatrix=[[],[],[]],this.init()};C.Posit.prototype.buildModel=function(e){var x=e/2;return[[-x,x,0],[x,x,0],[x,-x,0],[-x,-x,0]]};C.Posit.prototype.init=function(){var e=this.objectPoints.length,x=[],t=[],U=0,r=2,o;for(o=0;o<e;++o)this.objectVectors[o]=[this.objectPoints[o][0]-this.objectPoints[0][0],this.objectPoints[o][1]-this.objectPoints[0][1],this.objectPoints[o][2]-this.objectPoints[0][2]],x[o]=[this.objectVectors[o][0],this.objectVectors[o][1],this.objectVectors[o][2]];for(;U===0;)t[0]=this.objectVectors[1][1]*this.objectVectors[r][2]-this.objectVectors[1][2]*this.objectVectors[r][1],t[1]=this.objectVectors[1][2]*this.objectVectors[r][0]-this.objectVectors[1][0]*this.objectVectors[r][2],t[2]=this.objectVectors[1][0]*this.objectVectors[r][1]-this.objectVectors[1][1]*this.objectVectors[r][0],U=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),++r;for(o=0;o<3;++o)this.objectNormal[o]=t[o]/U;C.pseudoInverse(x,e,this.objectMatrix)};C.Posit.prototype.pose=function(e){var x=[[],[],[]],t=[[],[],[]],U=[],r=[[],[],[]],o=[[],[],[]],L=[],c=[],a,s,d,n,h,f;for(this.pos(e,x,t,U),d=this.isValid(x,U),d?a=this.iterate(e,x,U,r,L):a={euclidean:-1,pixels:-1,maximum:-1},n=this.isValid(t,U),n?s=this.iterate(e,t,U,o,c):s={euclidean:-1,pixels:-1,maximum:-1},h=0;h<3;++h)for(f=0;f<3;++f)d&&(L[h]-=r[h][f]*this.objectPoints[0][f]),n&&(c[h]-=o[h][f]*this.objectPoints[0][f]);return a.euclidean<s.euclidean?new C.Pose(a.pixels,r,L,s.pixels,o,c):new C.Pose(s.pixels,o,c,a.pixels,r,L)};C.Posit.prototype.pos=function(e,x,t,U){var r=this.objectPoints.length,o=[],L=[],c=[],a=[],s=[],d=[],n=[],h=[],f,p,u,l,y,g,m,_,i,b;for(i=0;i<r;++i)o[i]=[e[i].x-e[0].x,e[i].y-e[0].y];for(i=0;i<3;++i)for(L[i]=0,c[i]=0,b=0;b<r;++b)L[i]+=this.objectMatrix[i][b]*o[b][0],c[i]+=this.objectMatrix[i][b]*o[b][1];for(f=L[0]*L[0]+L[1]*L[1]+L[2]*L[2],p=c[0]*c[0]+c[1]*c[1]+c[2]*c[2],u=L[0]*c[0]+L[1]*c[1]+L[2]*c[2],l=(p-f)*(p-f)+4*(u*u),p-f>=0?y=(p-f+Math.sqrt(l))/2:y=(p-f-Math.sqrt(l))/2,y>=0?(g=Math.sqrt(y),g===0?m=0:m=-u/g):(g=Math.sqrt(-(u*u)/y),g===0?m=Math.sqrt(f-p):m=-u/g),i=0;i<3;++i)a[i]=L[i]+g*this.objectNormal[i],s[i]=c[i]+m*this.objectNormal[i];for(_=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]),i=0;i<3;++i)d[i]=a[i]/_,n[i]=s[i]/_;for(h[0]=d[1]*n[2]-d[2]*n[1],h[1]=d[2]*n[0]-d[0]*n[2],h[2]=d[0]*n[1]-d[1]*n[0],i=0;i<3;++i)x[0][i]=d[i],x[1][i]=n[i],x[2][i]=h[i];for(i=0;i<3;++i)a[i]=L[i]-g*this.objectNormal[i],s[i]=c[i]-m*this.objectNormal[i];for(i=0;i<3;++i)d[i]=a[i]/_,n[i]=s[i]/_;for(h[0]=d[1]*n[2]-d[2]*n[1],h[1]=d[2]*n[0]-d[0]*n[2],h[2]=d[0]*n[1]-d[1]*n[0],i=0;i<3;++i)t[0][i]=d[i],t[1][i]=n[i],t[2][i]=h[i];U[0]=e[0].x/_,U[1]=e[0].y/_,U[2]=this.focalLength/_};C.Posit.prototype.isValid=function(e,x){for(var t=this.objectPoints.length,U=1/0,r=0,o;r<t;++r)o=x[2]+(e[2][0]*this.objectVectors[r][0]+e[2][1]*this.objectVectors[r][1]+e[2][2]*this.objectVectors[r][2]),o<U&&(U=o);return U>=0};C.Posit.prototype.iterate=function(e,x,t,U,r){var o=this.objectPoints.length,L=[],c=[],a=[[],[],[]],s=[[],[],[]],d=[],n=[],h=!1,f=0,p,u,l,y,g,m,_,i,b;for(i=0;i<o;++i)L[i]={x:e[i].x,y:e[i].y};for(i=0;i<3;++i){for(b=0;b<3;++b)U[i][b]=x[i][b];r[i]=t[i]}for(i=0;i<o;++i){for(l=0,b=0;b<3;++b)l+=this.objectVectors[i][b]*U[2][b]/r[2];c[i]={x:(1+l)*e[i].x,y:(1+l)*e[i].y}}for(u=0,i=0;i<o;++i)u+=Math.abs(c[i].x-L[i].x),u+=Math.abs(c[i].y-L[i].y);for(i=0;i<3;++i)d[i]=r[i]-(U[i][0]*this.objectPoints[0][0]+U[i][1]*this.objectPoints[0][1]+U[i][2]*this.objectPoints[0][2]);for(y=g=this.error(e,U,d),h=g.pixels===0||u<.01;f++<100&&!h;){for(i=0;i<o;++i)L[i].x=c[i].x,L[i].y=c[i].y;for(this.pos(c,a,s,r),i=0;i<3;++i)d[i]=r[i]-(a[i][0]*this.objectPoints[0][0]+a[i][1]*this.objectPoints[0][1]+a[i][2]*this.objectPoints[0][2]),n[i]=r[i]-(s[i][0]*this.objectPoints[0][0]+s[i][1]*this.objectPoints[0][1]+s[i][2]*this.objectPoints[0][2]);if(g=this.error(e,a,d),m=this.error(e,s,n),g.euclidean>=0&&m.euclidean>=0)if(m.euclidean<g.euclidean)for(y=m,i=0;i<3;++i)for(b=0;b<3;++b)U[i][b]=s[i][b];else for(y=g,i=0;i<3;++i)for(b=0;b<3;++b)U[i][b]=a[i][b];if(g.euclidean<0&&m.euclidean>=0)for(y=m,i=0;i<3;++i)for(b=0;b<3;++b)U[i][b]=s[i][b];if(m.euclidean<0&&g.euclidean>=0)for(y=g,i=0;i<3;++i)for(b=0;b<3;++b)U[i][b]=a[i][b];for(i=0;i<o;++i){for(l=0,b=0;b<3;++b)l+=this.objectVectors[i][b]*U[2][b]/r[2];c[i].x=(1+l)*e[i].x,c[i].y=(1+l)*e[i].y}for(p=u,u=0,i=0;i<o;++i)u+=Math.abs(c[i].x-L[i].x),u+=Math.abs(c[i].y-L[i].y);_=Math.abs(u-p),h=y.pixels===0||_<.01}return y};C.Posit.prototype.error=function(e,x,t){var U=this.objectPoints.length,r=[],o=[],L=[],c=0,a=0,s=0,d,n,h;if(!this.isValid(x,t))return{euclidean:-1,pixels:-1,maximum:-1};for(d=0;d<U;++d)for(r[d]=[],n=0;n<3;++n)r[d][n]=t[n];for(d=0;d<U;++d)for(n=0;n<3;++n)for(h=0;h<3;++h)r[d][n]+=x[n][h]*this.objectPoints[d][h];for(d=0;d<U;++d)for(o[d]=[],n=0;n<2;++n)o[d][n]=this.focalLength*r[d][n]/r[d][2];for(d=0;d<U;++d)L[d]=[o[d][0]-e[d].x,o[d][1]-e[d].y];for(d=0;d<U;++d)c+=Math.sqrt(L[d][0]*L[d][0]+L[d][1]*L[d][1]),a+=Math.abs(Math.round(o[d][0])-Math.round(e[d].x))+Math.abs(Math.round(o[d][1])-Math.round(e[d].y)),Math.abs(L[d][0])>s&&(s=Math.abs(L[d][0])),Math.abs(L[d][1])>s&&(s=Math.abs(L[d][1]));return{euclidean:c/U,pixels:a,maximum:s}};C.pseudoInverse=function(e,x,t){var U=[],r=[[],[],[]],o=[[],[],[]],L=0,c=0,a,s,d;for(R.svdcmp(e,x,3,U,r),a=0;a<3;++a)U[a]>L&&(L=U[a]);for(L*=.01,a=0;a<3;++a)U[a]<L&&(U[a]=0);for(s=0;s<3;++s)if(U[s]===0)for(++c,d=s;d<2;++d){for(a=0;a<x;++a)e[a][d]=e[a][d+1];for(a=0;a<3;++a)r[a][d]=r[a][d+1]}for(s=0;s<2;++s)U[s]===0&&(U[s]=U[s+1]);for(a=0;a<3;++a)for(s=0;s<3-c;++s)o[a][s]=r[a][s]/U[s];for(a=0;a<3;++a)for(s=0;s<x;++s)for(t[a][s]=0,d=0;d<3-c;++d)t[a][s]+=o[a][d]*e[s][d]};C.Pose=function(e,x,t,U,r,o){this.bestError=e,this.bestRotation=x,this.bestTranslation=t,this.alternativeError=U,this.alternativeRotation=r,this.alternativeTranslation=o};const u0=({width:e,height:x})=>D(()=>{const t=document.createElement("canvas");return t.width=e,t.height=x,[t,t.getContext("2d")]}),p0=()=>{const e=k.exports.useRef({isRunning:!1,shouldStop:!1}),x=()=>{e.current.isRunning=!1,e.current.shouldStop=!1},t=D(()=>({run:U=>{if(e.current.isRunning)return;e.current.isRunning=!0;let r=null;async function o(L=0){if(e.current.shouldStop){x();return}const c=L-(r!=null?r:0);if(r===null||c>16){if(await U(),e.current.shouldStop){x();return}r=L}window.requestAnimationFrame(o)}o()},stop:()=>{e.current.shouldStop=!0}}));return[e.current.isRunning,t]},y0=({ctx:e,input:x})=>e.drawImage(x,0,0),g0=({ctx:e,width:x,height:t})=>{e.clearRect(0,0,x,t)},$=[923,1001,1007,241],v0=10;function m0({markers:e,context:x}){var t,U,r,o;for(x.lineWidth=3,r=0;r<e.length;++r){for(t=e[r].corners,x.strokeStyle="red",x.beginPath(),o=0;o<t.length;++o)U=t[o],x.moveTo(U.x,U.y),U=t[(o+1)%t.length],x.lineTo(U.x,U.y);x.stroke(),x.closePath(),x.strokeStyle="green",x.strokeRect(t[0].x-2,t[0].y-2,4,4)}}const _0=({width:e,height:x,videoNode:t,illuminationCanvasRef:U})=>{const[r,o]=k.exports.useState({ids:[],uniqIds:[],time:0,rotation:{yaw:0,roll:0,pitch:0},countOfSuccess:0}),[,L]=p0(),c=D(()=>new C.Posit(v0,e)),a=D(()=>new w.Detector({dictionaryName:"ARUCO"})),[,s]=u0({width:e,height:x}),d=D(()=>async()=>{const h=Date.now(),f=U.current,p=f==null?void 0:f.getContext("2d");g0({ctx:p,width:e,height:x}),y0({ctx:s,input:t});const u=s.getImageData(0,0,e,x),l=a.detect(u);if(l.length){var y,g,m,_;for(y=l[0].corners,_=0;_<y.length;++_)g=y[_],g.x=g.x-e/2,g.y=x/2-g.y;m=c.pose(y);const i={yaw:-Math.atan2(m.bestRotation[0][2],m.bestRotation[2][2])*(180/Math.PI),roll:Math.atan2(m.bestRotation[1][0],m.bestRotation[1][1])*(180/Math.PI),pitch:-Math.asin(-m.bestRotation[1][2])*(180/Math.PI)};m0({markers:l,context:p});const b=l.map(({id:j})=>j);o(j=>T(N({},j),{ids:b,time:Date.now()-h,uniqIds:[...new Set([...j.uniqIds,...b])],rotation:i,countOfSuccess:j.countOfSuccess+($.every(V=>b.includes(V))?1:0)}))}}),n=D(()=>({detect:()=>{L.run(d)},stopDetecting:()=>{L.stop()}}));return[r,n]},w0="_imageWrapper_1ep8n_1",j0="_mask_1ep8n_12",M0="_info_1ep8n_21",I0="_correct_1ep8n_27",C0="_incorrect_1ep8n_32";var E={imageWrapper:w0,mask:j0,info:M0,correct:I0,incorrect:C0};const k0=({width:e,height:x,videoNode:t})=>{const U=k.exports.useRef(null),[r,o]=_0({width:e,height:x,videoNode:t,illuminationCanvasRef:U});return k.exports.useEffect(()=>(o.detect(),o.stopDetecting),[]),P(b0,{children:[I(l0,{width:e,height:x,illuminationCanvasRef:U}),P("div",{className:E.info,children:[P("p",{children:["Uniq ids:"," ",r.uniqIds.map(L=>I("span",{className:$.includes(L)?E.correct:E.incorrect,children:L},L))]}),P("p",{children:["Ids:"," ",r.ids.map(L=>I("span",{className:$.includes(L)?E.correct:E.incorrect,children:L},L))]}),P("p",{children:["Rotation: ",I("br",{}),"Roll: ",Math.round(r.rotation.roll),I("br",{}),"Pitch: ",Math.round(r.rotation.pitch),I("br",{}),"Yaw: ",Math.round(r.rotation.yaw),I("br",{})]}),P("p",{children:["Time: ",r.time,"ms"]}),P("p",{children:["Count of success frames(4 ids are detected): ",r.countOfSuccess]})]})]})};var R0=k.exports.memo(k0);const D0="_wrapper_1o99e_1",P0="_ready_1o99e_9",N0="_video_1o99e_9",T0="_loader_1o99e_13",V0="_videoWrapper_1o99e_17";var A={wrapper:D0,ready:P0,video:N0,loader:T0,videoWrapper:V0};function E0(){var s;const e=k.exports.useRef(null),[x,t]=s0(),[U,r,o]=o0({videoRef:e,streamWidth:Z.WIDTH,streamHeight:Z.HEIGHT,streamAspectRatio:Z.ASPECT_RATIO});k.exports.useEffect(()=>{r.createStream()},[]);const L=x.isPlaying&&x.isLoadedMetaData&&o.isStateReady(),c=(s=U.stream)==null?void 0:s.getVideoTracks()[0],a=c==null?void 0:c.getSettings();return P("div",{className:X(A.wrapper,{[A.ready]:L}),children:[P("div",{className:A.videoWrapper,children:[I("video",{ref:e,muted:!0,onPlay:t.videoPlaying,autoPlay:!0,controls:!1,className:A.video,playsInline:!0,onLoadedMetadata:t.videoLoadedMetadata}),L&&I(R0,{width:a==null?void 0:a.width,height:a==null?void 0:a.height,videoNode:e.current})]}),I("div",{className:A.loader,children:"Loading..."})]})}a0.render(I(d0.StrictMode,{children:I(E0,{})}),document.getElementById("root"));
